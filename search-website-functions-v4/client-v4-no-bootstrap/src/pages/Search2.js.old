import React, { useState } from "react";
import request from "../api";
import Box from "@mui/material/Box";
import Button from "@mui/material/Button";
import TextField from "@mui/material/TextField";
import Autocomplete from '@mui/material/Autocomplete';
import styled from "@emotion/styled";
import { useQuery } from "@tanstack/react-query";

export default function Search2(props) {
  let [q, setQ] = useState("");
  const [options, setOptions] = useState([]);


  const top = 5;
  const suggester = "sg";

  const onFormSubmit = (data) => {
    console.log(`onFormSubmit called with '${q}', ${JSON.stringify(data)}`)
    if (props.searchChangeHandler) {
      props.searchChangeHandler(q);
    }
  };

  const onChangeHandler = (event, newValue) => {
    console.log(`onChangeHandler called with ${JSON.stringify(newValue)}`)

    const { label } = newValue;
    
    if (props.searchChangeHandler) {
      props.searchChangeHandler(label);
    }
  };

  const { data, isLoading, error } = useQuery({
    queryKey: ["suggest", q, top, suggester],
    refetchOnMount: true,
    enabled: q.length > 0,
    queryFn: async () => {
      if (q.length > 0) {
        return request("/api/suggest", "POST", {
          q,
          top,
          suggester,
        }).then((response) => {

          let i=0;
          const autoCompleteOptions = response.suggestions.map((suggestion) => ({ 'id': i++, 'label': suggestion.text } ));
          setOptions(autoCompleteOptions);
          return response;
        });
      }
    },
  });

  const StyledSearchBar = styled(Box)`
    padding: 0 16px 0 16px;
    height: 40em;

  `;

  return (
    <>
        <>{q}</>
        <form onSubmit={onFormSubmit}>
        <Autocomplete
          freeSolo
          autoSelect // text in box selected
          filterOptions={(x) => x}
          options={options}
          value={q}
          noOptionsText="Enter a book title"
          renderInput={(params) => <TextField {...params} label="Book" />}
          onChange={onChangeHandler} // option selected
          onInputChange={(event, newValue) => {
            console.log(`onInputChange ${newValue}`)
            // get suggestions
            setQ(newValue);
          }}
        />
        </form>
</>
  );
}
